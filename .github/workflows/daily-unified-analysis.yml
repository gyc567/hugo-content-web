name: Daily Analysis - Unified

on:
  schedule:
    # 每天北京时间早上6:00运行（UTC 22:00前一天）
    - cron: '0 22 * * *'
  workflow_dispatch: # 允许手动触发

jobs:
  unified-analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 允许写仓库内容
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        timeout-minutes: 10
        run: |
          echo "📦 安装 Python 依赖..."
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt
          pip install beautifulsoup4 lxml  # Product Hunt分析需要的额外依赖
          echo "✅ 依赖安装完成"

      - name: Check Python syntax
        run: |
          echo "🔍 检查Python语法..."
          python -m py_compile scripts/crypto-project-analyzer.py
          python -m py_compile scripts/claude_prompts_analyzer.py
          python -m py_compile scripts/producthunt_analyzer.py
          echo "✅ 语法检查通过"

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Run Claude Agent Analysis
        id: claude_agent
        timeout-minutes: 25
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTIONS: true
          DAYS_BACK: 7
          MAX_PROJECTS: 3
        run: |
          echo "🚀 开始运行Claude Agent分析器..."
          cd ${{ github.workspace }}
          if ! python scripts/crypto-project-analyzer.py; then
            echo "❌ Claude Agent分析器运行失败"
            echo "claude_agent_success=false" >> $GITHUB_OUTPUT
          else
            echo "✅ Claude Agent分析器运行成功"
            echo "claude_agent_success=true" >> $GITHUB_OUTPUT
          fi

      - name: Run Claude Prompts Analysis
        id: claude_prompts
        timeout-minutes: 25
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTIONS: true
          DAYS_BACK: 7
          MAX_PROJECTS: 3
        run: |
          echo "🚀 开始运行Claude Prompts分析器..."
          cd ${{ github.workspace }}
          if ! python scripts/claude_prompts_analyzer.py; then
            echo "❌ Claude Prompts分析器运行失败"
            echo "claude_prompts_success=false" >> $GITHUB_OUTPUT
          else
            echo "✅ Claude Prompts分析器运行成功"
            echo "claude_prompts_success=true" >> $GITHUB_OUTPUT
          fi

      - name: Run Product Hunt Analysis
        id: producthunt
        timeout-minutes: 25
        continue-on-error: true
        env:
          GITHUB_ACTIONS: true
        run: |
          echo "🚀 开始运行Product Hunt分析器..."
          cd ${{ github.workspace }}
          if ! python scripts/producthunt_analyzer.py; then
            echo "❌ Product Hunt分析器运行失败"
            echo "producthunt_success=false" >> $GITHUB_OUTPUT
          else
            echo "✅ Product Hunt分析器运行成功"
            echo "producthunt_success=true" >> $GITHUB_OUTPUT
          fi

      - name: Check for new articles
        id: check_articles
        run: |
          TODAY=$(date +%Y-%m-%d)
          CLAUDE_AGENT_ARTICLES=$(find content/posts -name "*$(date +%Y-%m-%d)*" -name "*claude-agent*" -type f | wc -l)
          CLAUDE_PROMPTS_ARTICLES=$(find content/posts -name "*$(date +%Y-%m-%d)*" -name "*claude-prompts*" -type f | wc -l)
          PRODUCTHUNT_ARTICLES=$(find content/posts -name "*producthunt-top3*$(date +%Y-%m-%d)*" -type f | wc -l)
          
          TOTAL_ARTICLES=$((CLAUDE_AGENT_ARTICLES + CLAUDE_PROMPTS_ARTICLES + PRODUCTHUNT_ARTICLES))
          
          echo "claude_agent_articles=$CLAUDE_AGENT_ARTICLES" >> $GITHUB_OUTPUT
          echo "claude_prompts_articles=$CLAUDE_PROMPTS_ARTICLES" >> $GITHUB_OUTPUT
          echo "producthunt_articles=$PRODUCTHUNT_ARTICLES" >> $GITHUB_OUTPUT
          echo "total_articles=$TOTAL_ARTICLES" >> $GITHUB_OUTPUT
          
          echo "📊 今日文章统计:"
          echo "  - Claude Agent: $CLAUDE_AGENT_ARTICLES 篇"
          echo "  - Claude Prompts: $CLAUDE_PROMPTS_ARTICLES 篇"
          echo "  - Product Hunt: $PRODUCTHUNT_ARTICLES 篇"
          echo "  - 总计: $TOTAL_ARTICLES 篇"

      - name: Build Hugo site
        if: steps.check_articles.outputs.total_articles > 0
        timeout-minutes: 10
        run: |
          echo "🏗️ 构建 Hugo 站点..."
          hugo --cleanDestinationDir --minify
          echo "✅ 站点构建完成"

      - name: Commit and push changes
        if: steps.check_articles.outputs.total_articles > 0
        run: |
          git add .
          if ! git diff --staged --quiet; then
            COMMIT_MSG="🤖 Auto: Daily unified analysis $(date +%Y-%m-%d) - ${{ steps.check_articles.outputs.total_articles }} articles"$'\n\n'"🤖 Generated with [Claude Code](https://claude.ai/code)"$'\n\n'"Co-Authored-By: Claude <noreply@anthropic.com>"
            git commit -m "$COMMIT_MSG"
            git push
            echo "✅ 更新已推送到仓库"
          else
            echo "ℹ️ 没有需要提交的更改"
          fi

      - name: Create summary
        if: always()
        run: |
          echo "## 📊 Daily Unified Analysis Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Date**: $(date +%Y-%m-%d)" >> $GITHUB_STEP_SUMMARY
          echo "- **Execution Time**: $(date +%H:%M:%S UTC)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### 🎯 Analysis Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Claude Agent**: ${{ steps.claude_agent.outcome }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Claude Prompts**: ${{ steps.claude_prompts.outcome }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Product Hunt**: ${{ steps.producthunt.outcome }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### 📄 Generated Articles" >> $GITHUB_STEP_SUMMARY
          echo "- **Claude Agent Articles**: ${{ steps.check_articles.outputs.claude_agent_articles }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Claude Prompts Articles**: ${{ steps.check_articles.outputs.claude_prompts_articles }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Product Hunt Articles**: ${{ steps.check_articles.outputs.producthunt_articles }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Articles**: ${{ steps.check_articles.outputs.total_articles }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check_articles.outputs.total_articles }}" -gt 0 ]; then
            echo "### ✅ Success" >> $GITHUB_STEP_SUMMARY
            echo "Successfully generated and published ${{ steps.check_articles.outputs.total_articles }} articles today!" >> $GITHUB_STEP_SUMMARY
            
            echo "### 📋 Article List" >> $GITHUB_STEP_SUMMARY
            find content/posts -name "*$(date +%Y-%m-%d)*" -type f -exec basename {} \; | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
          else
            echo "### ℹ️ No New Articles" >> $GITHUB_STEP_SUMMARY
            echo "No new articles were generated today. This might be normal if all recent projects have already been analyzed." >> $GITHUB_STEP_SUMMARY
          fi
          
          # 显示历史统计
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📈 Historical Statistics" >> $GITHUB_STEP_SUMMARY
          if [ -f "data/analyzed_projects.json" ]; then
            TOTAL_PROJECTS=$(python3 -c "import json; print(json.load(open('data/analyzed_projects.json'))['total_projects'])" 2>/dev/null || echo "0")
            echo "- **Total Claude Agent Projects**: $TOTAL_PROJECTS" >> $GITHUB_STEP_SUMMARY
          fi
          if [ -f "data/claude_prompts_projects.json" ]; then
            TOTAL_PROMPTS=$(python3 -c "import json; print(json.load(open('data/claude_prompts_projects.json'))['total_projects'])" 2>/dev/null || echo "0")
            echo "- **Total Claude Prompts Projects**: $TOTAL_PROMPTS" >> $GITHUB_STEP_SUMMARY
          fi
          if [ -f "data/producthunt_products.json" ]; then
            TOTAL_PRODUCTS=$(python3 -c "import json; print(json.load(open('data/producthunt_products.json'))['total_products'])" 2>/dev/null || echo "0")
            echo "- **Total Product Hunt Products**: $TOTAL_PRODUCTS" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Optimization Achieved" >> $GITHUB_STEP_SUMMARY
          echo "- **Previous Runtime**: ~270 minutes/month (3 separate workflows)" >> $GITHUB_STEP_SUMMARY
          echo "- **Current Runtime**: ~90 minutes/month (1 unified workflow)" >> $GITHUB_STEP_SUMMARY
          echo "- **Savings**: ~180 minutes/month (67% reduction)" >> $GITHUB_STEP_SUMMARY
          echo "- **Execution Frequency**: Once per day at 06:00 Beijing Time" >> $GITHUB_STEP_SUMMARY